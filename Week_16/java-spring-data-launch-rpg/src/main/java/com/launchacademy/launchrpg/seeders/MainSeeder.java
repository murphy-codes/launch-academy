package com.launchacademy.launchrpg.seeders;

import com.google.inject.internal.util.Lists;
import com.launchacademy.launchrpg.models.Archetype;
import com.launchacademy.launchrpg.models.PlayerCharacter;
import com.launchacademy.launchrpg.models.School;
import com.launchacademy.launchrpg.models.Spell;
import com.launchacademy.launchrpg.repositories.ArchetypeRepository;
import com.launchacademy.launchrpg.repositories.PlayerCharacterRepository;
import com.launchacademy.launchrpg.repositories.SchoolRepository;
import com.launchacademy.launchrpg.repositories.SpellRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;
import java.util.ArrayList;
import java.util.List;

@Component
public class MainSeeder implements CommandLineRunner {
  private PlayerCharacterRepository playerCharacterRepository;
  private ArchetypeRepository archetypeRepository;
  private SchoolRepository schoolRepository;
  private SpellRepository spellRepository;

  @Autowired
  public MainSeeder(PlayerCharacterRepository playerCharacterRepository, ArchetypeRepository archetypeRepository, SchoolRepository schoolRepository, SpellRepository spellRepository) {
    this.playerCharacterRepository = playerCharacterRepository;
    this.archetypeRepository = archetypeRepository;
    this.schoolRepository = schoolRepository;
    this.spellRepository = spellRepository;
  }

  @Override
  public void run(String... args) throws Exception {
    List<Archetype> archetypes = new ArrayList<>();
    List<PlayerCharacter> playerCharacters = new ArrayList<>();
    List<School> schools = new ArrayList<>();
    List<Spell> spells = new ArrayList<>();
    Archetype archetype = new Archetype();
    PlayerCharacter playerCharacter = new PlayerCharacter();
    School school = new School();
    Spell spell = new Spell();

    archetype.setType("Barbarian");
    archetype.setHitDice(12);
    archetype.setPrimary_stat("Str");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Bard");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Cleric");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Druid");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Fighter");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str/Dex");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Monk");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Str");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Paladin");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str/Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Ranger");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Dex/Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Rogue");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Dex");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Sorcerer");
    archetype.setHitDice(6);
    archetype.setPrimary_stat("Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Wizard");
    archetype.setHitDice(6);
    archetype.setPrimary_stat("Int");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Alchemist");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Dex/Int");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Cavalier");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Gunslinger");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Dex/Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Inquisitor");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("MAD - Str/Dex/Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Magus");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Dex/Int");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Oracle");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Omdura");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Shifter");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str/Dex");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Summoner");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Wis/Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Vampire Hunter");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Dex/Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Vigilante");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Dex");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Witch");
    archetype.setHitDice(6);
    archetype.setPrimary_stat("Int");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Antipaladin");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str/Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Ninja");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Dex/Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Samurai");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Arcanist");
    archetype.setHitDice(6);
    archetype.setPrimary_stat("Int");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Bloodrager");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Brawler");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Str");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Hunter");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Investigator");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Dex/Int");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Slayer");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Dex");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Warpriest");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Str/Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Swashbuckler");
    archetype.setHitDice(10);
    archetype.setPrimary_stat("Dex");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Shaman");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Wis");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Skald");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Cha");
    archetypes.add(archetype);
    archetype = new Archetype();
    archetype.setType("Cryptic");
    archetype.setHitDice(8);
    archetype.setPrimary_stat("Int");
    archetypes.add(archetype);

    playerCharacter.setName("Regis");
    playerCharacter.setArchetype(archetype);
    playerCharacter.setRace("Halfling");
    playerCharacter.setLevel(6);
    playerCharacter.setBackground("Icewind Dale's Halfling Rogue Extraordinarre");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Calista Oaklord");
    playerCharacter.setArchetype(archetypes.get(10));
    playerCharacter.setRace("Human");
    playerCharacter.setLevel(6);
    playerCharacter.setBackground("Your friendly, neighborhood necromancer");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Mordred");
    playerCharacter.setArchetype(archetypes.get(14));
    playerCharacter.setRace("Dwarf");
    playerCharacter.setLevel(20);
    playerCharacter.setBackground("The world's most paranoid Inquisitor of Asmodeus");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Nicodemus Tanessen");
    playerCharacter.setArchetype(archetypes.get(21));
    playerCharacter.setRace("Human");
    playerCharacter.setLevel(17);
    playerCharacter.setBackground("The evil prince turned Batman");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Skoolak-Tuug");
    playerCharacter.setArchetype(archetypes.get(22));
    playerCharacter.setRace("Ratfolk");
    playerCharacter.setLevel(20);
    playerCharacter.setBackground("The witch who just wants to build golems");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Ophideus");
    playerCharacter.setArchetype(archetypes.get(23));
    playerCharacter.setRace("Human");
    playerCharacter.setLevel(18);
    playerCharacter.setBackground("The Bard disguised as an Antipaladin");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Ant'antar Wehlnolu");
    playerCharacter.setArchetype(archetypes.get(24));
    playerCharacter.setRace("Drow");
    playerCharacter.setLevel(20);
    playerCharacter.setBackground("The human blender");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Ularis");
    playerCharacter.setArchetype(archetypes.get(32));
    playerCharacter.setRace("Duegar");
    playerCharacter.setLevel(16);
    playerCharacter.setBackground("Your resident expert on pain");
    playerCharacters.add(playerCharacter);
    playerCharacter = new PlayerCharacter();
    playerCharacter.setName("Skitter");
    playerCharacter.setArchetype(archetypes.get(36));
    playerCharacter.setRace("Ratfolk");
    playerCharacter.setLevel(20);
    playerCharacter.setBackground("The quietest mouse you'll never see");
    playerCharacters.add(playerCharacter);

    school.setName("Abjuration");
    school.setDescription("The abjurer uses magic against itself, and masters the art of defensive and warding magics.");
    schools.add(school);
    school = new School();
    school.setName("Conjuration");
    school.setDescription("The conjurer focuses on the study of summoning monsters and magic alike to bend to his will.");
    schools.add(school);
    school = new School();
    school.setName("Divination");
    school.setDescription("Diviners are masters of remote viewing, prophecies, and using magic to explore the world.");
    schools.add(school);
    school = new School();
    school.setName("Enchantment");
    school.setDescription("The enchanter uses magic to control and manipulate the minds of his victims.");
    schools.add(school);
    school = new School();
    school.setName("Evocation");
    school.setDescription("Evokers revel in the raw power of magic, and can use it to create and destroy with shocking ease.");
    schools.add(school);
    school = new School();
    school.setName("Illusion");
    school.setDescription("Illusionists use magic to weave confounding images, figments, and phantoms to baffle and vex their foes.");
    schools.add(school);
    school = new School();
    school.setName("Necromancy");
    school.setDescription("The dread and feared necromancer commands undead and uses the foul power of unlife against his enemies.");
    schools.add(school);
    school = new School();
    school.setName("Transmutation");
    school.setDescription("Transmuters use magic to change the world around them.");
    schools.add(school);

    spell.setName("Dispel Magic");
    spell.setDescription("Counterspells for the win!");
    spell.setLevel(3);
    spell.setSchool(schools.get(0));
    spells.add(spell);
    spell = new Spell();
    spell.setName("Summon Nature's Ally II");
    spell.setDescription("Because who doesn't want to be able to summon a wolf?");
    spell.setLevel(2);
    spell.setSchool(schools.get(1));
    spells.add(spell);
    spell = new Spell();
    spell.setName("Scrying");
    spell.setDescription("My crystal ball says your password is gimmeCoffee123!");
    spell.setLevel(4);
    spell.setSchool(schools.get(2));
    spells.add(spell);
    spell = new Spell();
    spell.setName("Command");
    spell.setDescription("Simon Says drop your sword off that cliff");
    spell.setLevel(1);
    spell.setSchool(schools.get(3));
    spells.add(spell);
    spell = new Spell();
    spell.setName("Fireball");
    spell.setDescription("Best used when the team's rogue is standing next to the enemy!");
    spell.setLevel(3);
    spell.setSchool(schools.get(4));
    spells.add(spell);
    spell = new Spell();
    spell.setName("Color Spray");
    spell.setDescription("Because stunning, blinding, or possibly knocking unconscious multiple enemies at once is pretty chill at level 1...");
    spell.setLevel(1);
    spell.setSchool(schools.get(5));
    spells.add(spell);
    spell = new Spell();
    spell.setName("Speak with Dead");
    spell.setDescription("Not even death will prematurely end your interrogations!");
    spell.setLevel(3);
    spell.setSchool(schools.get(6));
    spells.add(spell);
    spell = new Spell();
    spell.setName("Polymorph");
    spell.setDescription("Take on the form of another creature");
    spell.setLevel(5);
    spell.setSchool(schools.get(7));
    spells.add(spell);

    if (Lists.newArrayList(archetypeRepository.findAll()).size() == 0) { for (Archetype newArchetype: archetypes) { archetypeRepository.save(newArchetype); } }
    if (Lists.newArrayList(playerCharacterRepository.findAll()).size() == 0) { for (PlayerCharacter newPlayerCharacter: playerCharacters) { playerCharacterRepository.save(newPlayerCharacter); } }
    if (Lists.newArrayList(schoolRepository.findAll()).size() == 0) { for (School newSchool: schools) { schoolRepository.save(newSchool); } }
    if (Lists.newArrayList(spellRepository.findAll()).size() == 0) { for (Spell newSpell: spells) { spellRepository.save(newSpell); } }


  }
}